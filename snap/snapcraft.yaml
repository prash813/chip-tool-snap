name: chip-tool 
version: "0.1"
summary: matter for HA prelim snap
description: |
  Matter repo provides code for matter middleware and there are lot of examples based on operational features for home utilities. This snap tries to provide
  matter controller(chip-tool).   
confinement: strict
base: core22
grade: stable
license: Apache-2.0 #not sure whether this is right
architectures:
  - build-on: amd64
    build-for: amd64
  - build-on: amd64
    build-for: arm64
assumes:
  - snapd2.46
parts:
  matter-dev:
    source: https://github.com/project-chip/connectedhomeip.git #connectedhomeip 
    plugin: nil
    override-pull: |
      echo "just do nothing"
      #ln -sf ${CRAFT_PROJECT_DIR}/connectedhomeip connectedhomeip
    override-build: |
      set +u	
      echo "I am in dir `pwd`"
      echo ${SNAPCRAFT_TARGET_ARCH}
      if [ "${SNAPCRAFT_TARGET_ARCH}" = "arm64" ]
      then
        echo
        echo "ist snapcraft..."
        echo
      fi
      if [ "${LOCAL_BUILD}" = "YES" ] 
      then
        echo "just move the source"
        mv ${SNAPCRAFT_PROJECT_DIR}/build/* $SNAPCRAFT_PART_BUILD/
        mv ${SNAPCRAFT_PROJECT_DIR}/build/.[A-Z,a-z]?*  $SNAPCRAFT_PART_BUILD/
        #cp ${SNAPCRAFT_PROJECT_DIR}/Commands.* $SNAPCRAFT_PART_BUILD/examples/chip-tool/commands/common/
        #cp ${SNAPCRAFT_PROJECT_DIR}/PairingCommand.* $SNAPCRAFT_PART_BUILD/examples/chip-tool/commands/pairing/
        #cp ${SNAPCRAFT_PROJECT_DIR}/CHIPLinuxStorage.h $SNAPCRAFT_PART_BUILD/src/platform/Linux/
      else	
        #git clone --recurse-submodules https://github.com/project-chip/connectedhomeip.git .
        #git submodule update --init	
        git clone --depth 1   https://github.com/project-chip/connectedhomeip.git .
        #mv .gitmodules bakgitmodules
        #sed '/boufalolab_repo/,+4d' bakgitmodules > .gitmodules
        #git submodule deinit -f third_party/bouffalolab/repo
        ##VAR1=$(grep -ri submodule .gitmodules | awk -F' ' '{print $2 }' | awk -F']' '{print $1}')
        #VAR1=$(grep -ri path .gitmodules | awk -F'=' '{print $2 }')
        #echo $VAR1	
        #git submodule init $VAR1 	
        git submodule update --depth 1 --recursive --init
      fi
      sed -i 's/#define FATCONFDIR \"\/tmp\"/#define FATCONFDIR \"\/mnt\"/g' $SNAPCRAFT_PART_BUILD/src/platform/Linux/CHIPLinuxStorage.h
      sed -i 's/#define SYSCONFDIR \"\/tmp\"/#define SYSCONFDIR \"\/mnt\"/g' $SNAPCRAFT_PART_BUILD/src/platform/Linux/CHIPLinuxStorage.h
      sed -i 's/#define LOCALSTATEDIR \"\/tmp\"/#define LOCALSTATEDIR \"\/mnt\"/g' $SNAPCRAFT_PART_BUILD/src/platform/Linux/CHIPLinuxStorage.h
      ##git submodule update --depth 1 --recursive	
      source scripts/activate.sh
      echo ""	
      if [ "${SNAPCRAFT_TARGET_ARCH}" = "arm64" ] 
      then
        echo "arm64 build"
        OUTDIR=out/host_arm64
        gn gen --args='target_os="linux" target_cpu="arm64"' ${OUTDIR} 
      else
        OUTDIR=out/host1
        gn gen ${OUTDIR}
      fi  	
      ninja -C ${OUTDIR}
      cp -ar ${OUTDIR}/chip-* $CRAFT_PART_INSTALL/
      cp ${OUTDIR}/spake2p  $CRAFT_PART_INSTALL/
      cp ${OUTDIR}/address-resolve-tool $CRAFT_PART_INSTALL/
      cp ${OUTDIR}/obj/src/qrcodetool/bin/qrcodetool $CRAFT_PART_INSTALL/  
      cp -ar ${OUTDIR}/lib    $CRAFT_PART_INSTALL/
    build-packages: [git, gcc, g++, pkg-config, libssl-dev, libdbus-1-dev, libglib2.0-dev, libavahi-client-dev, ninja-build, python3-venv, python3-dev, python3-pip, unzip, libgirepository1.0-dev, libcairo2-dev, libreadline-dev, generate-ninja]
    #override-prime:
    #  rm -r $CRAFT_PART_INSTALL
    stage:
      - -tests
      - -gen
      - -protocol_buffer
      - -python
      - -python-venv
      - -*.ninja
      - -*.map 
    organize:
      chip-tool: bin/chip-tool  
apps:
  chip-tool:
    command: bin/chip-tool
    plugs:
      - network
      - bluez
      - avahi-control
      - avahi-observe
    environment:
      TMPDIR: "/mnt"
slots:
  exec-slot:
    interface: content
    content:  executables
    read:
      - $SNAP/bin

layout:
  /mnt:
    bind: $SNAP_DATA/mnt
